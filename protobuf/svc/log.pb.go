// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        v3.21.12
// source: protobuf/svc/log.proto

package svc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Level int32

const (
	Level_LogUnknown Level = 0
	Level_DEBUG      Level = 1
	Level_INFO       Level = 2
	Level_WARN       Level = 3
	Level_ERROR      Level = 4
)

// Enum value maps for Level.
var (
	Level_name = map[int32]string{
		0: "LogUnknown",
		1: "DEBUG",
		2: "INFO",
		3: "WARN",
		4: "ERROR",
	}
	Level_value = map[string]int32{
		"LogUnknown": 0,
		"DEBUG":      1,
		"INFO":       2,
		"WARN":       3,
		"ERROR":      4,
	}
)

func (x Level) Enum() *Level {
	p := new(Level)
	*p = x
	return p
}

func (x Level) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Level) Descriptor() protoreflect.EnumDescriptor {
	return file_protobuf_svc_log_proto_enumTypes[0].Descriptor()
}

func (Level) Type() protoreflect.EnumType {
	return &file_protobuf_svc_log_proto_enumTypes[0]
}

func (x Level) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Level.Descriptor instead.
func (Level) EnumDescriptor() ([]byte, []int) {
	return file_protobuf_svc_log_proto_rawDescGZIP(), []int{0}
}

type Operation int32

const (
	Operation_Unknown               Operation = 0
	Operation_UserLogin             Operation = 10
	Operation_UserLogout            Operation = 11
	Operation_UserChangePassword    Operation = 12
	Operation_AddTask               Operation = 13
	Operation_QueryTask             Operation = 14
	Operation_ViewTaskResult        Operation = 15
	Operation_AddGateway            Operation = 20
	Operation_RemoveGateway         Operation = 21
	Operation_AddAgent              Operation = 22
	Operation_RemoveAgent           Operation = 23
	Operation_AddSchedule           Operation = 24
	Operation_RemoveSchedule        Operation = 25
	Operation_AddDriverContainer    Operation = 30
	Operation_RemoveDriverContainer Operation = 31
	Operation_AddAgentContainer     Operation = 32
	Operation_RemoveAgentContainer  Operation = 33
	Operation_EnableOpenAPI         Operation = 40
	Operation_DisableOpenAPI        Operation = 41
	Operation_SendRequest           Operation = 42
	Operation_GetOpenAPIDoc         Operation = 43
	Operation_GetEnableOpenAPI      Operation = 44
)

// Enum value maps for Operation.
var (
	Operation_name = map[int32]string{
		0:  "Unknown",
		10: "UserLogin",
		11: "UserLogout",
		12: "UserChangePassword",
		13: "AddTask",
		14: "QueryTask",
		15: "ViewTaskResult",
		20: "AddGateway",
		21: "RemoveGateway",
		22: "AddAgent",
		23: "RemoveAgent",
		24: "AddSchedule",
		25: "RemoveSchedule",
		30: "AddDriverContainer",
		31: "RemoveDriverContainer",
		32: "AddAgentContainer",
		33: "RemoveAgentContainer",
		40: "EnableOpenAPI",
		41: "DisableOpenAPI",
		42: "SendRequest",
		43: "GetOpenAPIDoc",
		44: "GetEnableOpenAPI",
	}
	Operation_value = map[string]int32{
		"Unknown":               0,
		"UserLogin":             10,
		"UserLogout":            11,
		"UserChangePassword":    12,
		"AddTask":               13,
		"QueryTask":             14,
		"ViewTaskResult":        15,
		"AddGateway":            20,
		"RemoveGateway":         21,
		"AddAgent":              22,
		"RemoveAgent":           23,
		"AddSchedule":           24,
		"RemoveSchedule":        25,
		"AddDriverContainer":    30,
		"RemoveDriverContainer": 31,
		"AddAgentContainer":     32,
		"RemoveAgentContainer":  33,
		"EnableOpenAPI":         40,
		"DisableOpenAPI":        41,
		"SendRequest":           42,
		"GetOpenAPIDoc":         43,
		"GetEnableOpenAPI":      44,
	}
)

func (x Operation) Enum() *Operation {
	p := new(Operation)
	*p = x
	return p
}

func (x Operation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Operation) Descriptor() protoreflect.EnumDescriptor {
	return file_protobuf_svc_log_proto_enumTypes[1].Descriptor()
}

func (Operation) Type() protoreflect.EnumType {
	return &file_protobuf_svc_log_proto_enumTypes[1]
}

func (x Operation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Operation.Descriptor instead.
func (Operation) EnumDescriptor() ([]byte, []int) {
	return file_protobuf_svc_log_proto_rawDescGZIP(), []int{1}
}

type Logs struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	ID               string                 `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`                                                     // 日志ID
	Time             *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=Time,proto3" json:"Time,omitempty"`                                                 // 日志生成时间
	ServiceName      string                 `protobuf:"bytes,3,opt,name=ServiceName,proto3" json:"ServiceName,omitempty"`                                   // 日志所属微服务名
	Level            Level                  `protobuf:"varint,4,opt,name=Level,proto3,enum=lubricant.svc.Level" json:"Level,omitempty"`                     // 日志级别
	IPAddress        string                 `protobuf:"bytes,5,opt,name=IPAddress,proto3" json:"IPAddress,omitempty"`                                       // 请求来源IP
	Action           string                 `protobuf:"bytes,6,opt,name=Action,proto3" json:"Action,omitempty"`                                             // 请求动作
	Protocol         string                 `protobuf:"bytes,7,opt,name=Protocol,proto3" json:"Protocol,omitempty"`                                         // 请求协议
	OperationType    Operation              `protobuf:"varint,8,opt,name=OperationType,proto3,enum=lubricant.svc.Operation" json:"OperationType,omitempty"` // 请求动作类型
	OperatorID       string                 `protobuf:"bytes,9,opt,name=OperatorID,proto3" json:"OperatorID,omitempty"`                                     // 操作者ID
	Cost             *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=Cost,proto3" json:"Cost,omitempty"`                                                // 请求耗时
	Message          string                 `protobuf:"bytes,11,opt,name=message,proto3" json:"message,omitempty"`                                          // 日志内容
	Version          []byte                 `protobuf:"bytes,12,opt,name=version,proto3" json:"version,omitempty"`                                          // 组件版本(json bytes)
	ServiceErrorCode *int32                 `protobuf:"varint,13,opt,name=ServiceErrorCode,proto3,oneof" json:"ServiceErrorCode,omitempty"`                 // 业务错误码
	ExceptionInfo    []byte                 `protobuf:"bytes,14,opt,name=ExceptionInfo,proto3,oneof" json:"ExceptionInfo,omitempty"`                        // 异常信息(json bytes)
	Metadata         []byte                 `protobuf:"bytes,15,opt,name=metadata,proto3,oneof" json:"metadata,omitempty"`                                  // 日志元数据 (json bytes)
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Logs) Reset() {
	*x = Logs{}
	mi := &file_protobuf_svc_log_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Logs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Logs) ProtoMessage() {}

func (x *Logs) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_svc_log_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Logs.ProtoReflect.Descriptor instead.
func (*Logs) Descriptor() ([]byte, []int) {
	return file_protobuf_svc_log_proto_rawDescGZIP(), []int{0}
}

func (x *Logs) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Logs) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *Logs) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *Logs) GetLevel() Level {
	if x != nil {
		return x.Level
	}
	return Level_LogUnknown
}

func (x *Logs) GetIPAddress() string {
	if x != nil {
		return x.IPAddress
	}
	return ""
}

func (x *Logs) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *Logs) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *Logs) GetOperationType() Operation {
	if x != nil {
		return x.OperationType
	}
	return Operation_Unknown
}

func (x *Logs) GetOperatorID() string {
	if x != nil {
		return x.OperatorID
	}
	return ""
}

func (x *Logs) GetCost() *timestamppb.Timestamp {
	if x != nil {
		return x.Cost
	}
	return nil
}

func (x *Logs) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Logs) GetVersion() []byte {
	if x != nil {
		return x.Version
	}
	return nil
}

func (x *Logs) GetServiceErrorCode() int32 {
	if x != nil && x.ServiceErrorCode != nil {
		return *x.ServiceErrorCode
	}
	return 0
}

func (x *Logs) GetExceptionInfo() []byte {
	if x != nil {
		return x.ExceptionInfo
	}
	return nil
}

func (x *Logs) GetMetadata() []byte {
	if x != nil {
		return x.Metadata
	}
	return nil
}

var File_protobuf_svc_log_proto protoreflect.FileDescriptor

var file_protobuf_svc_log_proto_rawDesc = string([]byte{
	0x0a, 0x16, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x76, 0x63, 0x2f, 0x6c,
	0x6f, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x6c, 0x75, 0x62, 0x72, 0x69, 0x63,
	0x61, 0x6e, 0x74, 0x2e, 0x73, 0x76, 0x63, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xdb, 0x04, 0x0a, 0x04, 0x4c, 0x6f, 0x67,
	0x73, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49,
	0x44, 0x12, 0x2e, 0x0a, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x14, 0x2e, 0x6c, 0x75, 0x62, 0x72, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x2e, 0x73,
	0x76, 0x63, 0x2e, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12,
	0x1c, 0x0a, 0x09, 0x49, 0x50, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x49, 0x50, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x12, 0x3e, 0x0a, 0x0d, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x6c, 0x75, 0x62, 0x72, 0x69,
	0x63, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0d, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49,
	0x44, 0x12, 0x2e, 0x0a, 0x04, 0x43, 0x6f, 0x73, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x43, 0x6f, 0x73,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x48,
	0x00, 0x52, 0x10, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a, 0x0d, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x01, 0x52,
	0x0d, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x88, 0x01,
	0x01, 0x12, 0x1f, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x0c, 0x48, 0x02, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x88,
	0x01, 0x01, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x45, 0x78, 0x63, 0x65,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2a, 0x41, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12,
	0x0e, 0x0a, 0x0a, 0x4c, 0x6f, 0x67, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12,
	0x09, 0x0a, 0x05, 0x44, 0x45, 0x42, 0x55, 0x47, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x4e,
	0x46, 0x4f, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x57, 0x41, 0x52, 0x4e, 0x10, 0x03, 0x12, 0x09,
	0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x04, 0x2a, 0xab, 0x03, 0x0a, 0x09, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x6e, 0x6b, 0x6e, 0x6f,
	0x77, 0x6e, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x10, 0x0a, 0x12, 0x0e, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x6f, 0x75,
	0x74, 0x10, 0x0b, 0x12, 0x16, 0x0a, 0x12, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x10, 0x0c, 0x12, 0x0b, 0x0a, 0x07, 0x41,
	0x64, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x10, 0x0d, 0x12, 0x0d, 0x0a, 0x09, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x54, 0x61, 0x73, 0x6b, 0x10, 0x0e, 0x12, 0x12, 0x0a, 0x0e, 0x56, 0x69, 0x65, 0x77, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x10, 0x0f, 0x12, 0x0e, 0x0a, 0x0a, 0x41,
	0x64, 0x64, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x10, 0x14, 0x12, 0x11, 0x0a, 0x0d, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x10, 0x15, 0x12, 0x0c,
	0x0a, 0x08, 0x41, 0x64, 0x64, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x10, 0x16, 0x12, 0x0f, 0x0a, 0x0b,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x10, 0x17, 0x12, 0x0f, 0x0a,
	0x0b, 0x41, 0x64, 0x64, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x10, 0x18, 0x12, 0x12,
	0x0a, 0x0e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x10, 0x19, 0x12, 0x16, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x10, 0x1e, 0x12, 0x19, 0x0a, 0x15, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x10, 0x1f, 0x12, 0x15, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x10, 0x20, 0x12, 0x18, 0x0a, 0x14,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x10, 0x21, 0x12, 0x11, 0x0a, 0x0d, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x4f, 0x70, 0x65, 0x6e, 0x41, 0x50, 0x49, 0x10, 0x28, 0x12, 0x12, 0x0a, 0x0e, 0x44, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x50, 0x49, 0x10, 0x29, 0x12, 0x0f, 0x0a,
	0x0b, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x10, 0x2a, 0x12, 0x11,
	0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x50, 0x49, 0x44, 0x6f, 0x63, 0x10,
	0x2b, 0x12, 0x14, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x70,
	0x65, 0x6e, 0x41, 0x50, 0x49, 0x10, 0x2c, 0x42, 0x0e, 0x5a, 0x0c, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x73, 0x76, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_protobuf_svc_log_proto_rawDescOnce sync.Once
	file_protobuf_svc_log_proto_rawDescData []byte
)

func file_protobuf_svc_log_proto_rawDescGZIP() []byte {
	file_protobuf_svc_log_proto_rawDescOnce.Do(func() {
		file_protobuf_svc_log_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_protobuf_svc_log_proto_rawDesc), len(file_protobuf_svc_log_proto_rawDesc)))
	})
	return file_protobuf_svc_log_proto_rawDescData
}

var file_protobuf_svc_log_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_protobuf_svc_log_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_protobuf_svc_log_proto_goTypes = []any{
	(Level)(0),                    // 0: lubricant.svc.level
	(Operation)(0),                // 1: lubricant.svc.Operation
	(*Logs)(nil),                  // 2: lubricant.svc.Logs
	(*timestamppb.Timestamp)(nil), // 3: google.protobuf.Timestamp
}
var file_protobuf_svc_log_proto_depIdxs = []int32{
	3, // 0: lubricant.svc.Logs.Time:type_name -> google.protobuf.Timestamp
	0, // 1: lubricant.svc.Logs.Level:type_name -> lubricant.svc.level
	1, // 2: lubricant.svc.Logs.OperationType:type_name -> lubricant.svc.Operation
	3, // 3: lubricant.svc.Logs.Cost:type_name -> google.protobuf.Timestamp
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_protobuf_svc_log_proto_init() }
func file_protobuf_svc_log_proto_init() {
	if File_protobuf_svc_log_proto != nil {
		return
	}
	file_protobuf_svc_log_proto_msgTypes[0].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_protobuf_svc_log_proto_rawDesc), len(file_protobuf_svc_log_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protobuf_svc_log_proto_goTypes,
		DependencyIndexes: file_protobuf_svc_log_proto_depIdxs,
		EnumInfos:         file_protobuf_svc_log_proto_enumTypes,
		MessageInfos:      file_protobuf_svc_log_proto_msgTypes,
	}.Build()
	File_protobuf_svc_log_proto = out.File
	file_protobuf_svc_log_proto_goTypes = nil
	file_protobuf_svc_log_proto_depIdxs = nil
}
