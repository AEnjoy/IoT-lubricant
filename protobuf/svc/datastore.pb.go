// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        v6.31.0--rc2
// source: protobuf/svc/datastore.proto

package svc

import (
	meta "github.com/aenjoy/iot-lubricant/protobuf/meta"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CheckLinkerResult int32

const (
	CheckLinkerResult_Unknown CheckLinkerResult = 0
	CheckLinkerResult_Success CheckLinkerResult = 1
	CheckLinkerResult_Failed  CheckLinkerResult = 2
)

// Enum value maps for CheckLinkerResult.
var (
	CheckLinkerResult_name = map[int32]string{
		0: "Unknown",
		1: "Success",
		2: "Failed",
	}
	CheckLinkerResult_value = map[string]int32{
		"Unknown": 0,
		"Success": 1,
		"Failed":  2,
	}
)

func (x CheckLinkerResult) Enum() *CheckLinkerResult {
	p := new(CheckLinkerResult)
	*p = x
	return p
}

func (x CheckLinkerResult) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CheckLinkerResult) Descriptor() protoreflect.EnumDescriptor {
	return file_protobuf_svc_datastore_proto_enumTypes[0].Descriptor()
}

func (CheckLinkerResult) Type() protoreflect.EnumType {
	return &file_protobuf_svc_datastore_proto_enumTypes[0]
}

func (x CheckLinkerResult) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CheckLinkerResult.Descriptor instead.
func (CheckLinkerResult) EnumDescriptor() ([]byte, []int) {
	return file_protobuf_svc_datastore_proto_rawDescGZIP(), []int{0}
}

type CheckLinkerRequest struct {
	state  protoimpl.MessageState `protogen:"open.v1"`
	UserID string                 `protobuf:"bytes,1,opt,name=userID,proto3" json:"userID,omitempty"`
	// Types that are valid to be assigned to Request:
	//
	//	*CheckLinkerRequest_Tde
	//	*CheckLinkerRequest_Mysql
	Request       isCheckLinkerRequest_Request `protobuf_oneof:"request"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckLinkerRequest) Reset() {
	*x = CheckLinkerRequest{}
	mi := &file_protobuf_svc_datastore_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckLinkerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckLinkerRequest) ProtoMessage() {}

func (x *CheckLinkerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_svc_datastore_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckLinkerRequest.ProtoReflect.Descriptor instead.
func (*CheckLinkerRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_svc_datastore_proto_rawDescGZIP(), []int{0}
}

func (x *CheckLinkerRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *CheckLinkerRequest) GetRequest() isCheckLinkerRequest_Request {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *CheckLinkerRequest) GetTde() *CheckTDEngineLinkerRequest {
	if x != nil {
		if x, ok := x.Request.(*CheckLinkerRequest_Tde); ok {
			return x.Tde
		}
	}
	return nil
}

func (x *CheckLinkerRequest) GetMysql() *CheckMySQLLinkerRequest {
	if x != nil {
		if x, ok := x.Request.(*CheckLinkerRequest_Mysql); ok {
			return x.Mysql
		}
	}
	return nil
}

type isCheckLinkerRequest_Request interface {
	isCheckLinkerRequest_Request()
}

type CheckLinkerRequest_Tde struct {
	Tde *CheckTDEngineLinkerRequest `protobuf:"bytes,2,opt,name=tde,proto3,oneof"` //使用base64编码的 model.LinkerInfo json struct
}

type CheckLinkerRequest_Mysql struct {
	Mysql *CheckMySQLLinkerRequest `protobuf:"bytes,3,opt,name=mysql,proto3,oneof"` //使用base64编码的 mysql dsn
}

func (*CheckLinkerRequest_Tde) isCheckLinkerRequest_Request() {}

func (*CheckLinkerRequest_Mysql) isCheckLinkerRequest_Request() {}

type CheckLinkerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        CheckLinkerResult      `protobuf:"varint,1,opt,name=result,proto3,enum=lubricant.svc.CheckLinkerResult" json:"result,omitempty"` //检查结果
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckLinkerResponse) Reset() {
	*x = CheckLinkerResponse{}
	mi := &file_protobuf_svc_datastore_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckLinkerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckLinkerResponse) ProtoMessage() {}

func (x *CheckLinkerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_svc_datastore_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckLinkerResponse.ProtoReflect.Descriptor instead.
func (*CheckLinkerResponse) Descriptor() ([]byte, []int) {
	return file_protobuf_svc_datastore_proto_rawDescGZIP(), []int{1}
}

func (x *CheckLinkerResponse) GetResult() CheckLinkerResult {
	if x != nil {
		return x.Result
	}
	return CheckLinkerResult_Unknown
}

type CheckTDEngineLinkerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Dsn           string                 `protobuf:"bytes,1,opt,name=dsn,proto3" json:"dsn,omitempty"` //使用base64编码的 model.LinkerInfo json struct
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckTDEngineLinkerRequest) Reset() {
	*x = CheckTDEngineLinkerRequest{}
	mi := &file_protobuf_svc_datastore_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckTDEngineLinkerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckTDEngineLinkerRequest) ProtoMessage() {}

func (x *CheckTDEngineLinkerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_svc_datastore_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckTDEngineLinkerRequest.ProtoReflect.Descriptor instead.
func (*CheckTDEngineLinkerRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_svc_datastore_proto_rawDescGZIP(), []int{2}
}

func (x *CheckTDEngineLinkerRequest) GetDsn() string {
	if x != nil {
		return x.Dsn
	}
	return ""
}

type CheckMySQLLinkerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Dsn           string                 `protobuf:"bytes,1,opt,name=dsn,proto3" json:"dsn,omitempty"` //使用base64编码的 mysql dsn
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckMySQLLinkerRequest) Reset() {
	*x = CheckMySQLLinkerRequest{}
	mi := &file_protobuf_svc_datastore_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckMySQLLinkerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckMySQLLinkerRequest) ProtoMessage() {}

func (x *CheckMySQLLinkerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_svc_datastore_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckMySQLLinkerRequest.ProtoReflect.Descriptor instead.
func (*CheckMySQLLinkerRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_svc_datastore_proto_rawDescGZIP(), []int{3}
}

func (x *CheckMySQLLinkerRequest) GetDsn() string {
	if x != nil {
		return x.Dsn
	}
	return ""
}

type StoreDataRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectID     string                 `protobuf:"bytes,1,opt,name=projectID,proto3" json:"projectID,omitempty"` //项目ID
	Data          []byte                 `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`           //数据
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StoreDataRequest) Reset() {
	*x = StoreDataRequest{}
	mi := &file_protobuf_svc_datastore_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreDataRequest) ProtoMessage() {}

func (x *StoreDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_svc_datastore_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreDataRequest.ProtoReflect.Descriptor instead.
func (*StoreDataRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_svc_datastore_proto_rawDescGZIP(), []int{4}
}

func (x *StoreDataRequest) GetProjectID() string {
	if x != nil {
		return x.ProjectID
	}
	return ""
}

func (x *StoreDataRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type StoreDataResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectID     string                 `protobuf:"bytes,1,opt,name=projectID,proto3" json:"projectID,omitempty"` //项目ID
	LeaseID       int64                  `protobuf:"varint,2,opt,name=LeaseID,proto3" json:"LeaseID,omitempty"`    //分配到的租约ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StoreDataResponse) Reset() {
	*x = StoreDataResponse{}
	mi := &file_protobuf_svc_datastore_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreDataResponse) ProtoMessage() {}

func (x *StoreDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_svc_datastore_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreDataResponse.ProtoReflect.Descriptor instead.
func (*StoreDataResponse) Descriptor() ([]byte, []int) {
	return file_protobuf_svc_datastore_proto_rawDescGZIP(), []int{5}
}

func (x *StoreDataResponse) GetProjectID() string {
	if x != nil {
		return x.ProjectID
	}
	return ""
}

func (x *StoreDataResponse) GetLeaseID() int64 {
	if x != nil {
		return x.LeaseID
	}
	return 0
}

var File_protobuf_svc_datastore_proto protoreflect.FileDescriptor

var file_protobuf_svc_datastore_proto_rawDesc = string([]byte{
	0x0a, 0x1c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x76, 0x63, 0x2f, 0x64,
	0x61, 0x74, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d,
	0x6c, 0x75, 0x62, 0x72, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x76, 0x63, 0x1a, 0x18, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x2f, 0x6d, 0x65, 0x74,
	0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb6, 0x01, 0x0a, 0x12, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x4c, 0x69, 0x6e, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x3d, 0x0a, 0x03, 0x74, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6c, 0x75, 0x62, 0x72, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x2e,
	0x73, 0x76, 0x63, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x44, 0x45, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00,
	0x52, 0x03, 0x74, 0x64, 0x65, 0x12, 0x3e, 0x0a, 0x05, 0x6d, 0x79, 0x73, 0x71, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6c, 0x75, 0x62, 0x72, 0x69, 0x63, 0x61, 0x6e, 0x74,
	0x2e, 0x73, 0x76, 0x63, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4d, 0x79, 0x53, 0x51, 0x4c, 0x4c,
	0x69, 0x6e, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x05,
	0x6d, 0x79, 0x73, 0x71, 0x6c, 0x42, 0x09, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x4f, 0x0a, 0x13, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4c, 0x69, 0x6e, 0x6b, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x6c, 0x75, 0x62, 0x72, 0x69, 0x63,
	0x61, 0x6e, 0x74, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4c, 0x69, 0x6e,
	0x6b, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0x2e, 0x0a, 0x1a, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x44, 0x45, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x64, 0x73, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x73,
	0x6e, 0x22, 0x2b, 0x0a, 0x17, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4d, 0x79, 0x53, 0x51, 0x4c, 0x4c,
	0x69, 0x6e, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x64, 0x73, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x73, 0x6e, 0x22, 0x44,
	0x0a, 0x10, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x4b, 0x0a, 0x11, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x4c, 0x65, 0x61, 0x73, 0x65,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x4c, 0x65, 0x61, 0x73, 0x65, 0x49,
	0x44, 0x2a, 0x39, 0x0a, 0x11, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4c, 0x69, 0x6e, 0x6b, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77,
	0x6e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x01,
	0x12, 0x0a, 0x0a, 0x06, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0x02, 0x32, 0xe6, 0x01, 0x0a,
	0x10, 0x44, 0x61, 0x74, 0x61, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x54, 0x0a, 0x0b, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4c, 0x69, 0x6e, 0x6b, 0x65, 0x72,
	0x12, 0x21, 0x2e, 0x6c, 0x75, 0x62, 0x72, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x2e, 0x73, 0x76, 0x63,
	0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4c, 0x69, 0x6e, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6c, 0x75, 0x62, 0x72, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x2e,
	0x73, 0x76, 0x63, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4c, 0x69, 0x6e, 0x6b, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x09, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x2e, 0x6c, 0x75, 0x62, 0x72, 0x69, 0x63, 0x61, 0x6e, 0x74,
	0x2e, 0x73, 0x76, 0x63, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x6c, 0x75, 0x62, 0x72, 0x69, 0x63, 0x61, 0x6e,
	0x74, 0x2e, 0x73, 0x76, 0x63, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x28, 0x01, 0x12, 0x2a, 0x0a, 0x04, 0x70, 0x69, 0x6e,
	0x67, 0x12, 0x0f, 0x2e, 0x6c, 0x75, 0x62, 0x72, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x2e, 0x50, 0x69,
	0x6e, 0x67, 0x1a, 0x0f, 0x2e, 0x6c, 0x75, 0x62, 0x72, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x2e, 0x50,
	0x69, 0x6e, 0x67, 0x22, 0x00, 0x32, 0x43, 0x0a, 0x15, 0x44, 0x61, 0x74, 0x61, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x44, 0x65, 0x62, 0x75, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2a,
	0x0a, 0x04, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x0f, 0x2e, 0x6c, 0x75, 0x62, 0x72, 0x69, 0x63, 0x61,
	0x6e, 0x74, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x1a, 0x0f, 0x2e, 0x6c, 0x75, 0x62, 0x72, 0x69, 0x63,
	0x61, 0x6e, 0x74, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x22, 0x00, 0x42, 0x0e, 0x5a, 0x0c, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x76, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
})

var (
	file_protobuf_svc_datastore_proto_rawDescOnce sync.Once
	file_protobuf_svc_datastore_proto_rawDescData []byte
)

func file_protobuf_svc_datastore_proto_rawDescGZIP() []byte {
	file_protobuf_svc_datastore_proto_rawDescOnce.Do(func() {
		file_protobuf_svc_datastore_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_protobuf_svc_datastore_proto_rawDesc), len(file_protobuf_svc_datastore_proto_rawDesc)))
	})
	return file_protobuf_svc_datastore_proto_rawDescData
}

var file_protobuf_svc_datastore_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_protobuf_svc_datastore_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_protobuf_svc_datastore_proto_goTypes = []any{
	(CheckLinkerResult)(0),             // 0: lubricant.svc.CheckLinkerResult
	(*CheckLinkerRequest)(nil),         // 1: lubricant.svc.CheckLinkerRequest
	(*CheckLinkerResponse)(nil),        // 2: lubricant.svc.CheckLinkerResponse
	(*CheckTDEngineLinkerRequest)(nil), // 3: lubricant.svc.CheckTDEngineLinkerRequest
	(*CheckMySQLLinkerRequest)(nil),    // 4: lubricant.svc.CheckMySQLLinkerRequest
	(*StoreDataRequest)(nil),           // 5: lubricant.svc.StoreDataRequest
	(*StoreDataResponse)(nil),          // 6: lubricant.svc.StoreDataResponse
	(*meta.Ping)(nil),                  // 7: lubricant.Ping
}
var file_protobuf_svc_datastore_proto_depIdxs = []int32{
	3, // 0: lubricant.svc.CheckLinkerRequest.tde:type_name -> lubricant.svc.CheckTDEngineLinkerRequest
	4, // 1: lubricant.svc.CheckLinkerRequest.mysql:type_name -> lubricant.svc.CheckMySQLLinkerRequest
	0, // 2: lubricant.svc.CheckLinkerResponse.result:type_name -> lubricant.svc.CheckLinkerResult
	1, // 3: lubricant.svc.DataStoreService.CheckLinker:input_type -> lubricant.svc.CheckLinkerRequest
	5, // 4: lubricant.svc.DataStoreService.StoreData:input_type -> lubricant.svc.StoreDataRequest
	7, // 5: lubricant.svc.DataStoreService.ping:input_type -> lubricant.Ping
	7, // 6: lubricant.svc.DataStoreDebugService.ping:input_type -> lubricant.Ping
	2, // 7: lubricant.svc.DataStoreService.CheckLinker:output_type -> lubricant.svc.CheckLinkerResponse
	6, // 8: lubricant.svc.DataStoreService.StoreData:output_type -> lubricant.svc.StoreDataResponse
	7, // 9: lubricant.svc.DataStoreService.ping:output_type -> lubricant.Ping
	7, // 10: lubricant.svc.DataStoreDebugService.ping:output_type -> lubricant.Ping
	7, // [7:11] is the sub-list for method output_type
	3, // [3:7] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_protobuf_svc_datastore_proto_init() }
func file_protobuf_svc_datastore_proto_init() {
	if File_protobuf_svc_datastore_proto != nil {
		return
	}
	file_protobuf_svc_datastore_proto_msgTypes[0].OneofWrappers = []any{
		(*CheckLinkerRequest_Tde)(nil),
		(*CheckLinkerRequest_Mysql)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_protobuf_svc_datastore_proto_rawDesc), len(file_protobuf_svc_datastore_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_protobuf_svc_datastore_proto_goTypes,
		DependencyIndexes: file_protobuf_svc_datastore_proto_depIdxs,
		EnumInfos:         file_protobuf_svc_datastore_proto_enumTypes,
		MessageInfos:      file_protobuf_svc_datastore_proto_msgTypes,
	}.Build()
	File_protobuf_svc_datastore_proto = out.File
	file_protobuf_svc_datastore_proto_goTypes = nil
	file_protobuf_svc_datastore_proto_depIdxs = nil
}
