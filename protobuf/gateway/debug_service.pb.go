// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        v3.21.12
// source: protobuf/gateway/debug_service.proto

package gateway

import (
	status "google.golang.org/genproto/googleapis/rpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	agent "github.com/aenjoy/iot-lubricant/protobuf/agent"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MockCoreTaskRequest struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	TaskId  string                 `protobuf:"bytes,1,opt,name=taskId,proto3" json:"taskId,omitempty"`
	Timeout *int32                 `protobuf:"varint,2,opt,name=timeout,proto3,oneof" json:"timeout,omitempty"`
	IsQuery *bool                  `protobuf:"varint,3,opt,name=isQuery,proto3,oneof" json:"isQuery,omitempty"`
	// Types that are valid to be assigned to Task:
	//
	//	*MockCoreTaskRequest_StartAgentRequest
	//	*MockCoreTaskRequest_CreateAgentRequest
	//	*MockCoreTaskRequest_EditAgentRequest
	//	*MockCoreTaskRequest_RemoveAgentRequest
	//	*MockCoreTaskRequest_StopAgentRequest
	//	*MockCoreTaskRequest_UpdateAgentRequest
	//	*MockCoreTaskRequest_GetAgentStatusRequest
	Task          isMockCoreTaskRequest_Task `protobuf_oneof:"task"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MockCoreTaskRequest) Reset() {
	*x = MockCoreTaskRequest{}
	mi := &file_protobuf_gateway_debug_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MockCoreTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MockCoreTaskRequest) ProtoMessage() {}

func (x *MockCoreTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_gateway_debug_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MockCoreTaskRequest.ProtoReflect.Descriptor instead.
func (*MockCoreTaskRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_gateway_debug_service_proto_rawDescGZIP(), []int{0}
}

func (x *MockCoreTaskRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *MockCoreTaskRequest) GetTimeout() int32 {
	if x != nil && x.Timeout != nil {
		return *x.Timeout
	}
	return 0
}

func (x *MockCoreTaskRequest) GetIsQuery() bool {
	if x != nil && x.IsQuery != nil {
		return *x.IsQuery
	}
	return false
}

func (x *MockCoreTaskRequest) GetTask() isMockCoreTaskRequest_Task {
	if x != nil {
		return x.Task
	}
	return nil
}

func (x *MockCoreTaskRequest) GetStartAgentRequest() *StartAgentRequest {
	if x != nil {
		if x, ok := x.Task.(*MockCoreTaskRequest_StartAgentRequest); ok {
			return x.StartAgentRequest
		}
	}
	return nil
}

func (x *MockCoreTaskRequest) GetCreateAgentRequest() *CreateAgentRequest {
	if x != nil {
		if x, ok := x.Task.(*MockCoreTaskRequest_CreateAgentRequest); ok {
			return x.CreateAgentRequest
		}
	}
	return nil
}

func (x *MockCoreTaskRequest) GetEditAgentRequest() *EditAgentRequest {
	if x != nil {
		if x, ok := x.Task.(*MockCoreTaskRequest_EditAgentRequest); ok {
			return x.EditAgentRequest
		}
	}
	return nil
}

func (x *MockCoreTaskRequest) GetRemoveAgentRequest() *RemoveAgentRequest {
	if x != nil {
		if x, ok := x.Task.(*MockCoreTaskRequest_RemoveAgentRequest); ok {
			return x.RemoveAgentRequest
		}
	}
	return nil
}

func (x *MockCoreTaskRequest) GetStopAgentRequest() *StopAgentRequest {
	if x != nil {
		if x, ok := x.Task.(*MockCoreTaskRequest_StopAgentRequest); ok {
			return x.StopAgentRequest
		}
	}
	return nil
}

func (x *MockCoreTaskRequest) GetUpdateAgentRequest() *UpdateAgentRequest {
	if x != nil {
		if x, ok := x.Task.(*MockCoreTaskRequest_UpdateAgentRequest); ok {
			return x.UpdateAgentRequest
		}
	}
	return nil
}

func (x *MockCoreTaskRequest) GetGetAgentStatusRequest() *GetAgentStatusRequest {
	if x != nil {
		if x, ok := x.Task.(*MockCoreTaskRequest_GetAgentStatusRequest); ok {
			return x.GetAgentStatusRequest
		}
	}
	return nil
}

type isMockCoreTaskRequest_Task interface {
	isMockCoreTaskRequest_Task()
}

type MockCoreTaskRequest_StartAgentRequest struct {
	StartAgentRequest *StartAgentRequest `protobuf:"bytes,4,opt,name=startAgentRequest,proto3,oneof"`
}

type MockCoreTaskRequest_CreateAgentRequest struct {
	CreateAgentRequest *CreateAgentRequest `protobuf:"bytes,5,opt,name=createAgentRequest,proto3,oneof"`
}

type MockCoreTaskRequest_EditAgentRequest struct {
	EditAgentRequest *EditAgentRequest `protobuf:"bytes,6,opt,name=editAgentRequest,proto3,oneof"`
}

type MockCoreTaskRequest_RemoveAgentRequest struct {
	RemoveAgentRequest *RemoveAgentRequest `protobuf:"bytes,7,opt,name=removeAgentRequest,proto3,oneof"`
}

type MockCoreTaskRequest_StopAgentRequest struct {
	StopAgentRequest *StopAgentRequest `protobuf:"bytes,8,opt,name=stopAgentRequest,proto3,oneof"`
}

type MockCoreTaskRequest_UpdateAgentRequest struct {
	UpdateAgentRequest *UpdateAgentRequest `protobuf:"bytes,9,opt,name=updateAgentRequest,proto3,oneof"`
}

type MockCoreTaskRequest_GetAgentStatusRequest struct {
	GetAgentStatusRequest *GetAgentStatusRequest `protobuf:"bytes,10,opt,name=getAgentStatusRequest,proto3,oneof"`
}

func (*MockCoreTaskRequest_StartAgentRequest) isMockCoreTaskRequest_Task() {}

func (*MockCoreTaskRequest_CreateAgentRequest) isMockCoreTaskRequest_Task() {}

func (*MockCoreTaskRequest_EditAgentRequest) isMockCoreTaskRequest_Task() {}

func (*MockCoreTaskRequest_RemoveAgentRequest) isMockCoreTaskRequest_Task() {}

func (*MockCoreTaskRequest_StopAgentRequest) isMockCoreTaskRequest_Task() {}

func (*MockCoreTaskRequest_UpdateAgentRequest) isMockCoreTaskRequest_Task() {}

func (*MockCoreTaskRequest_GetAgentStatusRequest) isMockCoreTaskRequest_Task() {}

type MockCoreTaskResponse struct {
	state  protoimpl.MessageState `protogen:"open.v1"`
	TaskId string                 `protobuf:"bytes,1,opt,name=taskId,proto3" json:"taskId,omitempty"`
	// Types that are valid to be assigned to Result:
	//
	//	*MockCoreTaskResponse_Finish
	//	*MockCoreTaskResponse_Failed
	//	*MockCoreTaskResponse_Working
	//	*MockCoreTaskResponse_Pending
	//	*MockCoreTaskResponse_NotFound
	Result        isMockCoreTaskResponse_Result `protobuf_oneof:"result"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MockCoreTaskResponse) Reset() {
	*x = MockCoreTaskResponse{}
	mi := &file_protobuf_gateway_debug_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MockCoreTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MockCoreTaskResponse) ProtoMessage() {}

func (x *MockCoreTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_gateway_debug_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MockCoreTaskResponse.ProtoReflect.Descriptor instead.
func (*MockCoreTaskResponse) Descriptor() ([]byte, []int) {
	return file_protobuf_gateway_debug_service_proto_rawDescGZIP(), []int{1}
}

func (x *MockCoreTaskResponse) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *MockCoreTaskResponse) GetResult() isMockCoreTaskResponse_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *MockCoreTaskResponse) GetFinish() *anypb.Any {
	if x != nil {
		if x, ok := x.Result.(*MockCoreTaskResponse_Finish); ok {
			return x.Finish
		}
	}
	return nil
}

func (x *MockCoreTaskResponse) GetFailed() *status.Status {
	if x != nil {
		if x, ok := x.Result.(*MockCoreTaskResponse_Failed); ok {
			return x.Failed
		}
	}
	return nil
}

func (x *MockCoreTaskResponse) GetWorking() *status.Status {
	if x != nil {
		if x, ok := x.Result.(*MockCoreTaskResponse_Working); ok {
			return x.Working
		}
	}
	return nil
}

func (x *MockCoreTaskResponse) GetPending() *status.Status {
	if x != nil {
		if x, ok := x.Result.(*MockCoreTaskResponse_Pending); ok {
			return x.Pending
		}
	}
	return nil
}

func (x *MockCoreTaskResponse) GetNotFound() *status.Status {
	if x != nil {
		if x, ok := x.Result.(*MockCoreTaskResponse_NotFound); ok {
			return x.NotFound
		}
	}
	return nil
}

type isMockCoreTaskResponse_Result interface {
	isMockCoreTaskResponse_Result()
}

type MockCoreTaskResponse_Finish struct {
	Finish *anypb.Any `protobuf:"bytes,2,opt,name=finish,proto3,oneof"` // 任务完成
}

type MockCoreTaskResponse_Failed struct {
	Failed *status.Status `protobuf:"bytes,3,opt,name=failed,proto3,oneof"` // 任务失败 错误信息
}

type MockCoreTaskResponse_Working struct {
	Working *status.Status `protobuf:"bytes,4,opt,name=working,proto3,oneof"` // 任务进行中 进度信息
}

type MockCoreTaskResponse_Pending struct {
	Pending *status.Status `protobuf:"bytes,5,opt,name=pending,proto3,oneof"` // 任务阻塞中 阻塞原因
}

type MockCoreTaskResponse_NotFound struct {
	NotFound *status.Status `protobuf:"bytes,6,opt,name=notFound,proto3,oneof"`
}

func (*MockCoreTaskResponse_Finish) isMockCoreTaskResponse_Result() {}

func (*MockCoreTaskResponse_Failed) isMockCoreTaskResponse_Result() {}

func (*MockCoreTaskResponse_Working) isMockCoreTaskResponse_Result() {}

func (*MockCoreTaskResponse_Pending) isMockCoreTaskResponse_Result() {}

func (*MockCoreTaskResponse_NotFound) isMockCoreTaskResponse_Result() {}

type GetGatewayResourcesApiRequest struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	Timeout int32                  `protobuf:"varint,4,opt,name=timeout,proto3" json:"timeout,omitempty"`
	// Types that are valid to be assigned to Resources:
	//
	//	*GetGatewayResourcesApiRequest_Pool
	//	*GetGatewayResourcesApiRequest_AgentOperator
	//	*GetGatewayResourcesApiRequest_DataOperator
	Resources     isGetGatewayResourcesApiRequest_Resources `protobuf_oneof:"resources"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetGatewayResourcesApiRequest) Reset() {
	*x = GetGatewayResourcesApiRequest{}
	mi := &file_protobuf_gateway_debug_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGatewayResourcesApiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGatewayResourcesApiRequest) ProtoMessage() {}

func (x *GetGatewayResourcesApiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_gateway_debug_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGatewayResourcesApiRequest.ProtoReflect.Descriptor instead.
func (*GetGatewayResourcesApiRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_gateway_debug_service_proto_rawDescGZIP(), []int{2}
}

func (x *GetGatewayResourcesApiRequest) GetTimeout() int32 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

func (x *GetGatewayResourcesApiRequest) GetResources() isGetGatewayResourcesApiRequest_Resources {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *GetGatewayResourcesApiRequest) GetPool() *GetAgentPool {
	if x != nil {
		if x, ok := x.Resources.(*GetGatewayResourcesApiRequest_Pool); ok {
			return x.Pool
		}
	}
	return nil
}

func (x *GetGatewayResourcesApiRequest) GetAgentOperator() *AgentPoolOperator {
	if x != nil {
		if x, ok := x.Resources.(*GetGatewayResourcesApiRequest_AgentOperator); ok {
			return x.AgentOperator
		}
	}
	return nil
}

func (x *GetGatewayResourcesApiRequest) GetDataOperator() *DataPoolOperator {
	if x != nil {
		if x, ok := x.Resources.(*GetGatewayResourcesApiRequest_DataOperator); ok {
			return x.DataOperator
		}
	}
	return nil
}

type isGetGatewayResourcesApiRequest_Resources interface {
	isGetGatewayResourcesApiRequest_Resources()
}

type GetGatewayResourcesApiRequest_Pool struct {
	Pool *GetAgentPool `protobuf:"bytes,1,opt,name=pool,proto3,oneof"`
}

type GetGatewayResourcesApiRequest_AgentOperator struct {
	AgentOperator *AgentPoolOperator `protobuf:"bytes,2,opt,name=agentOperator,proto3,oneof"`
}

type GetGatewayResourcesApiRequest_DataOperator struct {
	DataOperator *DataPoolOperator `protobuf:"bytes,3,opt,name=dataOperator,proto3,oneof"`
}

func (*GetGatewayResourcesApiRequest_Pool) isGetGatewayResourcesApiRequest_Resources() {}

func (*GetGatewayResourcesApiRequest_AgentOperator) isGetGatewayResourcesApiRequest_Resources() {}

func (*GetGatewayResourcesApiRequest_DataOperator) isGetGatewayResourcesApiRequest_Resources() {}

type GetGatewayResourcesApiResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Resources     *anypb.Any             `protobuf:"bytes,1,opt,name=resources,proto3" json:"resources,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetGatewayResourcesApiResponse) Reset() {
	*x = GetGatewayResourcesApiResponse{}
	mi := &file_protobuf_gateway_debug_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGatewayResourcesApiResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGatewayResourcesApiResponse) ProtoMessage() {}

func (x *GetGatewayResourcesApiResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_gateway_debug_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGatewayResourcesApiResponse.ProtoReflect.Descriptor instead.
func (*GetGatewayResourcesApiResponse) Descriptor() ([]byte, []int) {
	return file_protobuf_gateway_debug_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetGatewayResourcesApiResponse) GetResources() *anypb.Any {
	if x != nil {
		return x.Resources
	}
	return nil
}

type GetAgentPool struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAgentPool) Reset() {
	*x = GetAgentPool{}
	mi := &file_protobuf_gateway_debug_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAgentPool) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAgentPool) ProtoMessage() {}

func (x *GetAgentPool) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_gateway_debug_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAgentPool.ProtoReflect.Descriptor instead.
func (*GetAgentPool) Descriptor() ([]byte, []int) {
	return file_protobuf_gateway_debug_service_proto_rawDescGZIP(), []int{4}
}

type AgentPoolResources struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AgentID       []string               `protobuf:"bytes,1,rep,name=agentID,proto3" json:"agentID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AgentPoolResources) Reset() {
	*x = AgentPoolResources{}
	mi := &file_protobuf_gateway_debug_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AgentPoolResources) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentPoolResources) ProtoMessage() {}

func (x *AgentPoolResources) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_gateway_debug_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentPoolResources.ProtoReflect.Descriptor instead.
func (*AgentPoolResources) Descriptor() ([]byte, []int) {
	return file_protobuf_gateway_debug_service_proto_rawDescGZIP(), []int{5}
}

func (x *AgentPoolResources) GetAgentID() []string {
	if x != nil {
		return x.AgentID
	}
	return nil
}

type AgentPoolOperator struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Operator:
	//
	//	*AgentPoolOperator_StartAgentRequest
	//	*AgentPoolOperator_CreateAgentRequest
	//	*AgentPoolOperator_EditAgentRequest
	//	*AgentPoolOperator_RemoveAgentRequest
	//	*AgentPoolOperator_StopAgentRequest
	//	*AgentPoolOperator_UpdateAgentRequest
	//	*AgentPoolOperator_GetAgentStatusRequest
	Operator      isAgentPoolOperator_Operator `protobuf_oneof:"operator"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AgentPoolOperator) Reset() {
	*x = AgentPoolOperator{}
	mi := &file_protobuf_gateway_debug_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AgentPoolOperator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentPoolOperator) ProtoMessage() {}

func (x *AgentPoolOperator) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_gateway_debug_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentPoolOperator.ProtoReflect.Descriptor instead.
func (*AgentPoolOperator) Descriptor() ([]byte, []int) {
	return file_protobuf_gateway_debug_service_proto_rawDescGZIP(), []int{6}
}

func (x *AgentPoolOperator) GetOperator() isAgentPoolOperator_Operator {
	if x != nil {
		return x.Operator
	}
	return nil
}

func (x *AgentPoolOperator) GetStartAgentRequest() *StartAgentRequest {
	if x != nil {
		if x, ok := x.Operator.(*AgentPoolOperator_StartAgentRequest); ok {
			return x.StartAgentRequest
		}
	}
	return nil
}

func (x *AgentPoolOperator) GetCreateAgentRequest() *CreateAgentRequest {
	if x != nil {
		if x, ok := x.Operator.(*AgentPoolOperator_CreateAgentRequest); ok {
			return x.CreateAgentRequest
		}
	}
	return nil
}

func (x *AgentPoolOperator) GetEditAgentRequest() *EditAgentRequest {
	if x != nil {
		if x, ok := x.Operator.(*AgentPoolOperator_EditAgentRequest); ok {
			return x.EditAgentRequest
		}
	}
	return nil
}

func (x *AgentPoolOperator) GetRemoveAgentRequest() *RemoveAgentRequest {
	if x != nil {
		if x, ok := x.Operator.(*AgentPoolOperator_RemoveAgentRequest); ok {
			return x.RemoveAgentRequest
		}
	}
	return nil
}

func (x *AgentPoolOperator) GetStopAgentRequest() *StopAgentRequest {
	if x != nil {
		if x, ok := x.Operator.(*AgentPoolOperator_StopAgentRequest); ok {
			return x.StopAgentRequest
		}
	}
	return nil
}

func (x *AgentPoolOperator) GetUpdateAgentRequest() *UpdateAgentRequest {
	if x != nil {
		if x, ok := x.Operator.(*AgentPoolOperator_UpdateAgentRequest); ok {
			return x.UpdateAgentRequest
		}
	}
	return nil
}

func (x *AgentPoolOperator) GetGetAgentStatusRequest() *GetAgentStatusRequest {
	if x != nil {
		if x, ok := x.Operator.(*AgentPoolOperator_GetAgentStatusRequest); ok {
			return x.GetAgentStatusRequest
		}
	}
	return nil
}

type isAgentPoolOperator_Operator interface {
	isAgentPoolOperator_Operator()
}

type AgentPoolOperator_StartAgentRequest struct {
	StartAgentRequest *StartAgentRequest `protobuf:"bytes,1,opt,name=startAgentRequest,proto3,oneof"`
}

type AgentPoolOperator_CreateAgentRequest struct {
	CreateAgentRequest *CreateAgentRequest `protobuf:"bytes,2,opt,name=createAgentRequest,proto3,oneof"`
}

type AgentPoolOperator_EditAgentRequest struct {
	EditAgentRequest *EditAgentRequest `protobuf:"bytes,3,opt,name=editAgentRequest,proto3,oneof"`
}

type AgentPoolOperator_RemoveAgentRequest struct {
	RemoveAgentRequest *RemoveAgentRequest `protobuf:"bytes,4,opt,name=removeAgentRequest,proto3,oneof"`
}

type AgentPoolOperator_StopAgentRequest struct {
	StopAgentRequest *StopAgentRequest `protobuf:"bytes,5,opt,name=stopAgentRequest,proto3,oneof"`
}

type AgentPoolOperator_UpdateAgentRequest struct {
	UpdateAgentRequest *UpdateAgentRequest `protobuf:"bytes,6,opt,name=updateAgentRequest,proto3,oneof"`
}

type AgentPoolOperator_GetAgentStatusRequest struct {
	GetAgentStatusRequest *GetAgentStatusRequest `protobuf:"bytes,7,opt,name=getAgentStatusRequest,proto3,oneof"`
}

func (*AgentPoolOperator_StartAgentRequest) isAgentPoolOperator_Operator() {}

func (*AgentPoolOperator_CreateAgentRequest) isAgentPoolOperator_Operator() {}

func (*AgentPoolOperator_EditAgentRequest) isAgentPoolOperator_Operator() {}

func (*AgentPoolOperator_RemoveAgentRequest) isAgentPoolOperator_Operator() {}

func (*AgentPoolOperator_StopAgentRequest) isAgentPoolOperator_Operator() {}

func (*AgentPoolOperator_UpdateAgentRequest) isAgentPoolOperator_Operator() {}

func (*AgentPoolOperator_GetAgentStatusRequest) isAgentPoolOperator_Operator() {}

type DataPoolOperator struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	AgentID string                 `protobuf:"bytes,1,opt,name=agentID,proto3" json:"agentID,omitempty"`
	// Types that are valid to be assigned to Operator:
	//
	//	*DataPoolOperator_StoreDataRequest
	//	*DataPoolOperator_GetDataRequest
	//	*DataPoolOperator_PopDataRequest
	//	*DataPoolOperator_TopDataRequest
	//	*DataPoolOperator_CleanDataRequest
	//	*DataPoolOperator_SizeDataRequest
	Operator      isDataPoolOperator_Operator `protobuf_oneof:"operator"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DataPoolOperator) Reset() {
	*x = DataPoolOperator{}
	mi := &file_protobuf_gateway_debug_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataPoolOperator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataPoolOperator) ProtoMessage() {}

func (x *DataPoolOperator) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_gateway_debug_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataPoolOperator.ProtoReflect.Descriptor instead.
func (*DataPoolOperator) Descriptor() ([]byte, []int) {
	return file_protobuf_gateway_debug_service_proto_rawDescGZIP(), []int{7}
}

func (x *DataPoolOperator) GetAgentID() string {
	if x != nil {
		return x.AgentID
	}
	return ""
}

func (x *DataPoolOperator) GetOperator() isDataPoolOperator_Operator {
	if x != nil {
		return x.Operator
	}
	return nil
}

func (x *DataPoolOperator) GetStoreDataRequest() *agent.DataMessage {
	if x != nil {
		if x, ok := x.Operator.(*DataPoolOperator_StoreDataRequest); ok {
			return x.StoreDataRequest
		}
	}
	return nil
}

func (x *DataPoolOperator) GetGetDataRequest() *DataGetRequest {
	if x != nil {
		if x, ok := x.Operator.(*DataPoolOperator_GetDataRequest); ok {
			return x.GetDataRequest
		}
	}
	return nil
}

func (x *DataPoolOperator) GetPopDataRequest() *DataPopRequest {
	if x != nil {
		if x, ok := x.Operator.(*DataPoolOperator_PopDataRequest); ok {
			return x.PopDataRequest
		}
	}
	return nil
}

func (x *DataPoolOperator) GetTopDataRequest() *DataTopRequest {
	if x != nil {
		if x, ok := x.Operator.(*DataPoolOperator_TopDataRequest); ok {
			return x.TopDataRequest
		}
	}
	return nil
}

func (x *DataPoolOperator) GetCleanDataRequest() *DataCleanRequest {
	if x != nil {
		if x, ok := x.Operator.(*DataPoolOperator_CleanDataRequest); ok {
			return x.CleanDataRequest
		}
	}
	return nil
}

func (x *DataPoolOperator) GetSizeDataRequest() *DataSizeRequest {
	if x != nil {
		if x, ok := x.Operator.(*DataPoolOperator_SizeDataRequest); ok {
			return x.SizeDataRequest
		}
	}
	return nil
}

type isDataPoolOperator_Operator interface {
	isDataPoolOperator_Operator()
}

type DataPoolOperator_StoreDataRequest struct {
	StoreDataRequest *agent.DataMessage `protobuf:"bytes,2,opt,name=storeDataRequest,proto3,oneof"`
}

type DataPoolOperator_GetDataRequest struct {
	GetDataRequest *DataGetRequest `protobuf:"bytes,3,opt,name=getDataRequest,proto3,oneof"`
}

type DataPoolOperator_PopDataRequest struct {
	PopDataRequest *DataPopRequest `protobuf:"bytes,4,opt,name=popDataRequest,proto3,oneof"`
}

type DataPoolOperator_TopDataRequest struct {
	TopDataRequest *DataTopRequest `protobuf:"bytes,5,opt,name=topDataRequest,proto3,oneof"`
}

type DataPoolOperator_CleanDataRequest struct {
	CleanDataRequest *DataCleanRequest `protobuf:"bytes,6,opt,name=cleanDataRequest,proto3,oneof"`
}

type DataPoolOperator_SizeDataRequest struct {
	SizeDataRequest *DataSizeRequest `protobuf:"bytes,7,opt,name=sizeDataRequest,proto3,oneof"`
}

func (*DataPoolOperator_StoreDataRequest) isDataPoolOperator_Operator() {}

func (*DataPoolOperator_GetDataRequest) isDataPoolOperator_Operator() {}

func (*DataPoolOperator_PopDataRequest) isDataPoolOperator_Operator() {}

func (*DataPoolOperator_TopDataRequest) isDataPoolOperator_Operator() {}

func (*DataPoolOperator_CleanDataRequest) isDataPoolOperator_Operator() {}

func (*DataPoolOperator_SizeDataRequest) isDataPoolOperator_Operator() {}

type DataGetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DataGetRequest) Reset() {
	*x = DataGetRequest{}
	mi := &file_protobuf_gateway_debug_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataGetRequest) ProtoMessage() {}

func (x *DataGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_gateway_debug_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataGetRequest.ProtoReflect.Descriptor instead.
func (*DataGetRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_gateway_debug_service_proto_rawDescGZIP(), []int{8}
}

type DataPopRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DataPopRequest) Reset() {
	*x = DataPopRequest{}
	mi := &file_protobuf_gateway_debug_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataPopRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataPopRequest) ProtoMessage() {}

func (x *DataPopRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_gateway_debug_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataPopRequest.ProtoReflect.Descriptor instead.
func (*DataPopRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_gateway_debug_service_proto_rawDescGZIP(), []int{9}
}

type DataTopRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DataTopRequest) Reset() {
	*x = DataTopRequest{}
	mi := &file_protobuf_gateway_debug_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataTopRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataTopRequest) ProtoMessage() {}

func (x *DataTopRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_gateway_debug_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataTopRequest.ProtoReflect.Descriptor instead.
func (*DataTopRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_gateway_debug_service_proto_rawDescGZIP(), []int{10}
}

type DataCleanRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DataCleanRequest) Reset() {
	*x = DataCleanRequest{}
	mi := &file_protobuf_gateway_debug_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataCleanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataCleanRequest) ProtoMessage() {}

func (x *DataCleanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_gateway_debug_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataCleanRequest.ProtoReflect.Descriptor instead.
func (*DataCleanRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_gateway_debug_service_proto_rawDescGZIP(), []int{11}
}

type DataSizeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DataSizeRequest) Reset() {
	*x = DataSizeRequest{}
	mi := &file_protobuf_gateway_debug_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataSizeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataSizeRequest) ProtoMessage() {}

func (x *DataSizeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_gateway_debug_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataSizeRequest.ProtoReflect.Descriptor instead.
func (*DataSizeRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_gateway_debug_service_proto_rawDescGZIP(), []int{12}
}

var File_protobuf_gateway_debug_service_proto protoreflect.FileDescriptor

var file_protobuf_gateway_debug_service_proto_rawDesc = string([]byte{
	0x0a, 0x24, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2f, 0x64, 0x65, 0x62, 0x75, 0x67, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x6c, 0x75, 0x62, 0x72, 0x69, 0x63, 0x61, 0x6e,
	0x74, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x1a, 0x20, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2f, 0x61, 0x70, 0x69, 0x5f,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2f, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x17, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf4, 0x05, 0x0a, 0x13,
	0x6d, 0x6f, 0x63, 0x6b, 0x43, 0x6f, 0x72, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x07, 0x74,
	0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x07,
	0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x69, 0x73,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x48, 0x02, 0x52, 0x07, 0x69,
	0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x88, 0x01, 0x01, 0x12, 0x54, 0x0a, 0x11, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6c, 0x75, 0x62, 0x72, 0x69, 0x63, 0x61, 0x6e, 0x74,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x11, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x57, 0x0a, 0x12, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6c, 0x75,
	0x62, 0x72, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x48, 0x00, 0x52, 0x12, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x51, 0x0a, 0x10, 0x65, 0x64, 0x69, 0x74,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6c, 0x75, 0x62, 0x72, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x2e, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x10, 0x65, 0x64, 0x69, 0x74, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x57, 0x0a, 0x12, 0x72,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6c, 0x75, 0x62, 0x72, 0x69, 0x63,
	0x61, 0x6e, 0x74, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00,
	0x52, 0x12, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x51, 0x0a, 0x10, 0x73, 0x74, 0x6f, 0x70, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x6c, 0x75, 0x62, 0x72, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x10, 0x73, 0x74, 0x6f, 0x70, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x57, 0x0a, 0x12, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6c, 0x75, 0x62, 0x72, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x12, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x60, 0x0a, 0x15, 0x67, 0x65, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x6c, 0x75, 0x62, 0x72, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x15, 0x67, 0x65, 0x74,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x69, 0x73, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x22, 0xa8, 0x02, 0x0a, 0x14, 0x6d, 0x6f, 0x63, 0x6b, 0x43, 0x6f, 0x72, 0x65, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74,
	0x61, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x73,
	0x6b, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x06, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x48, 0x00, 0x52, 0x06, 0x66, 0x69, 0x6e,
	0x69, 0x73, 0x68, 0x12, 0x2c, 0x0a, 0x06, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x48, 0x00, 0x52, 0x06, 0x66, 0x61, 0x69, 0x6c, 0x65,
	0x64, 0x12, 0x2e, 0x0a, 0x07, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x48, 0x00, 0x52, 0x07, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e,
	0x67, 0x12, 0x2e, 0x0a, 0x07, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x48, 0x00, 0x52, 0x07, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x12, 0x30, 0x0a, 0x08, 0x6e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x48, 0x00, 0x52, 0x08, 0x6e, 0x6f, 0x74, 0x46, 0x6f,
	0x75, 0x6e, 0x64, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x96, 0x02,
	0x0a, 0x1d, 0x47, 0x65, 0x74, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x41, 0x70, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x35, 0x0a, 0x04, 0x70, 0x6f, 0x6f,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6c, 0x75, 0x62, 0x72, 0x69, 0x63,
	0x61, 0x6e, 0x74, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x48, 0x00, 0x52, 0x04, 0x70, 0x6f, 0x6f, 0x6c,
	0x12, 0x4c, 0x0a, 0x0d, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6c, 0x75, 0x62, 0x72, 0x69, 0x63,
	0x61, 0x6e, 0x74, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x48, 0x00, 0x52,
	0x0d, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x49,
	0x0a, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6c, 0x75, 0x62, 0x72, 0x69, 0x63, 0x61, 0x6e, 0x74,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x6f,
	0x6c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x0c, 0x64, 0x61, 0x74,
	0x61, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x42, 0x0b, 0x0a, 0x09, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x22, 0x54, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x47, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x41, 0x70, 0x69,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e,
	0x79, 0x52, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x22, 0x0e, 0x0a, 0x0c,
	0x47, 0x65, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x22, 0x2e, 0x0a, 0x12,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x22, 0x88, 0x05, 0x0a,
	0x11, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x12, 0x54, 0x0a, 0x11, 0x73, 0x74, 0x61, 0x72, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x6c, 0x75, 0x62, 0x72, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x11, 0x73, 0x74, 0x61, 0x72, 0x74, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x57, 0x0a, 0x12, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6c, 0x75, 0x62, 0x72, 0x69, 0x63, 0x61, 0x6e, 0x74,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x12, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x51, 0x0a, 0x10, 0x65, 0x64, 0x69, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6c, 0x75,
	0x62, 0x72, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e,
	0x45, 0x64, 0x69, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x48, 0x00, 0x52, 0x10, 0x65, 0x64, 0x69, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x57, 0x0a, 0x12, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x6c, 0x75, 0x62, 0x72, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x2e, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x12, 0x72, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x51, 0x0a,
	0x10, 0x73, 0x74, 0x6f, 0x70, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6c, 0x75, 0x62, 0x72, 0x69, 0x63,
	0x61, 0x6e, 0x74, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x53, 0x74, 0x6f, 0x70,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x10,
	0x73, 0x74, 0x6f, 0x70, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x57, 0x0a, 0x12, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6c,
	0x75, 0x62, 0x72, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x12, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x60, 0x0a, 0x15, 0x67, 0x65, 0x74,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6c, 0x75, 0x62, 0x72, 0x69,
	0x63, 0x61, 0x6e, 0x74, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x48, 0x00, 0x52, 0x15, 0x67, 0x65, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x0a, 0x0a, 0x08, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x22, 0x8e, 0x04, 0x0a, 0x10, 0x44, 0x61, 0x74, 0x61,
	0x50, 0x6f, 0x6f, 0x6c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x4a, 0x0a, 0x10, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x6c, 0x75, 0x62, 0x72, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x2e, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00,
	0x52, 0x10, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x4b, 0x0a, 0x0e, 0x67, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6c, 0x75, 0x62,
	0x72, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52,
	0x0e, 0x67, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x4b, 0x0a, 0x0e, 0x70, 0x6f, 0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6c, 0x75, 0x62, 0x72, 0x69, 0x63,
	0x61, 0x6e, 0x74, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x44, 0x61, 0x74, 0x61,
	0x50, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0e, 0x70, 0x6f,
	0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4b, 0x0a, 0x0e,
	0x74, 0x6f, 0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6c, 0x75, 0x62, 0x72, 0x69, 0x63, 0x61, 0x6e, 0x74,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x54, 0x6f, 0x70,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0e, 0x74, 0x6f, 0x70, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x51, 0x0a, 0x10, 0x63, 0x6c, 0x65,
	0x61, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6c, 0x75, 0x62, 0x72, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6c, 0x65, 0x61,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x10, 0x63, 0x6c, 0x65, 0x61,
	0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4e, 0x0a, 0x0f,
	0x73, 0x69, 0x7a, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6c, 0x75, 0x62, 0x72, 0x69, 0x63, 0x61, 0x6e,
	0x74, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x53, 0x69,
	0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0f, 0x73, 0x69, 0x7a,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x0a, 0x0a, 0x08,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x22, 0x10, 0x0a, 0x0e, 0x44, 0x61, 0x74, 0x61,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x10, 0x0a, 0x0e, 0x44, 0x61,
	0x74, 0x61, 0x50, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x10, 0x0a, 0x0e,
	0x44, 0x61, 0x74, 0x61, 0x54, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x12,
	0x0a, 0x10, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x11, 0x0a, 0x0f, 0x44, 0x61, 0x74, 0x61, 0x53, 0x69, 0x7a, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x32, 0xe8, 0x01, 0x0a, 0x0c, 0x64, 0x65, 0x62, 0x75, 0x67, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5f, 0x0a, 0x0c, 0x6d, 0x6f, 0x63, 0x6b, 0x43, 0x6f,
	0x72, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x26, 0x2e, 0x6c, 0x75, 0x62, 0x72, 0x69, 0x63, 0x61,
	0x6e, 0x74, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x6d, 0x6f, 0x63, 0x6b, 0x43,
	0x6f, 0x72, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27,
	0x2e, 0x6c, 0x75, 0x62, 0x72, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2e, 0x6d, 0x6f, 0x63, 0x6b, 0x43, 0x6f, 0x72, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x77, 0x0a, 0x10, 0x47, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x30, 0x2e, 0x6c, 0x75,
	0x62, 0x72, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e,
	0x47, 0x65, 0x74, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x41, 0x70, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e,
	0x6c, 0x75, 0x62, 0x72, 0x69, 0x63, 0x61, 0x6e, 0x74, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x41, 0x70, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x42, 0x12, 0x5a, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_protobuf_gateway_debug_service_proto_rawDescOnce sync.Once
	file_protobuf_gateway_debug_service_proto_rawDescData []byte
)

func file_protobuf_gateway_debug_service_proto_rawDescGZIP() []byte {
	file_protobuf_gateway_debug_service_proto_rawDescOnce.Do(func() {
		file_protobuf_gateway_debug_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_protobuf_gateway_debug_service_proto_rawDesc), len(file_protobuf_gateway_debug_service_proto_rawDesc)))
	})
	return file_protobuf_gateway_debug_service_proto_rawDescData
}

var file_protobuf_gateway_debug_service_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_protobuf_gateway_debug_service_proto_goTypes = []any{
	(*MockCoreTaskRequest)(nil),            // 0: lubricant.gateway.mockCoreTaskRequest
	(*MockCoreTaskResponse)(nil),           // 1: lubricant.gateway.mockCoreTaskResponse
	(*GetGatewayResourcesApiRequest)(nil),  // 2: lubricant.gateway.GetGatewayResourcesApiRequest
	(*GetGatewayResourcesApiResponse)(nil), // 3: lubricant.gateway.GetGatewayResourcesApiResponse
	(*GetAgentPool)(nil),                   // 4: lubricant.gateway.GetAgentPool
	(*AgentPoolResources)(nil),             // 5: lubricant.gateway.AgentPoolResources
	(*AgentPoolOperator)(nil),              // 6: lubricant.gateway.AgentPoolOperator
	(*DataPoolOperator)(nil),               // 7: lubricant.gateway.DataPoolOperator
	(*DataGetRequest)(nil),                 // 8: lubricant.gateway.DataGetRequest
	(*DataPopRequest)(nil),                 // 9: lubricant.gateway.DataPopRequest
	(*DataTopRequest)(nil),                 // 10: lubricant.gateway.DataTopRequest
	(*DataCleanRequest)(nil),               // 11: lubricant.gateway.DataCleanRequest
	(*DataSizeRequest)(nil),                // 12: lubricant.gateway.DataSizeRequest
	(*StartAgentRequest)(nil),              // 13: lubricant.gateway.StartAgentRequest
	(*CreateAgentRequest)(nil),             // 14: lubricant.gateway.CreateAgentRequest
	(*EditAgentRequest)(nil),               // 15: lubricant.gateway.EditAgentRequest
	(*RemoveAgentRequest)(nil),             // 16: lubricant.gateway.RemoveAgentRequest
	(*StopAgentRequest)(nil),               // 17: lubricant.gateway.StopAgentRequest
	(*UpdateAgentRequest)(nil),             // 18: lubricant.gateway.UpdateAgentRequest
	(*GetAgentStatusRequest)(nil),          // 19: lubricant.gateway.GetAgentStatusRequest
	(*anypb.Any)(nil),                      // 20: google.protobuf.Any
	(*status.Status)(nil),                  // 21: google.rpc.Status
	(*agent.DataMessage)(nil),              // 22: lubricant.agent.DataMessage
}
var file_protobuf_gateway_debug_service_proto_depIdxs = []int32{
	13, // 0: lubricant.gateway.mockCoreTaskRequest.startAgentRequest:type_name -> lubricant.gateway.StartAgentRequest
	14, // 1: lubricant.gateway.mockCoreTaskRequest.createAgentRequest:type_name -> lubricant.gateway.CreateAgentRequest
	15, // 2: lubricant.gateway.mockCoreTaskRequest.editAgentRequest:type_name -> lubricant.gateway.EditAgentRequest
	16, // 3: lubricant.gateway.mockCoreTaskRequest.removeAgentRequest:type_name -> lubricant.gateway.RemoveAgentRequest
	17, // 4: lubricant.gateway.mockCoreTaskRequest.stopAgentRequest:type_name -> lubricant.gateway.StopAgentRequest
	18, // 5: lubricant.gateway.mockCoreTaskRequest.updateAgentRequest:type_name -> lubricant.gateway.UpdateAgentRequest
	19, // 6: lubricant.gateway.mockCoreTaskRequest.getAgentStatusRequest:type_name -> lubricant.gateway.GetAgentStatusRequest
	20, // 7: lubricant.gateway.mockCoreTaskResponse.finish:type_name -> google.protobuf.Any
	21, // 8: lubricant.gateway.mockCoreTaskResponse.failed:type_name -> google.rpc.Status
	21, // 9: lubricant.gateway.mockCoreTaskResponse.working:type_name -> google.rpc.Status
	21, // 10: lubricant.gateway.mockCoreTaskResponse.pending:type_name -> google.rpc.Status
	21, // 11: lubricant.gateway.mockCoreTaskResponse.notFound:type_name -> google.rpc.Status
	4,  // 12: lubricant.gateway.GetGatewayResourcesApiRequest.pool:type_name -> lubricant.gateway.GetAgentPool
	6,  // 13: lubricant.gateway.GetGatewayResourcesApiRequest.agentOperator:type_name -> lubricant.gateway.AgentPoolOperator
	7,  // 14: lubricant.gateway.GetGatewayResourcesApiRequest.dataOperator:type_name -> lubricant.gateway.DataPoolOperator
	20, // 15: lubricant.gateway.GetGatewayResourcesApiResponse.resources:type_name -> google.protobuf.Any
	13, // 16: lubricant.gateway.AgentPoolOperator.startAgentRequest:type_name -> lubricant.gateway.StartAgentRequest
	14, // 17: lubricant.gateway.AgentPoolOperator.createAgentRequest:type_name -> lubricant.gateway.CreateAgentRequest
	15, // 18: lubricant.gateway.AgentPoolOperator.editAgentRequest:type_name -> lubricant.gateway.EditAgentRequest
	16, // 19: lubricant.gateway.AgentPoolOperator.removeAgentRequest:type_name -> lubricant.gateway.RemoveAgentRequest
	17, // 20: lubricant.gateway.AgentPoolOperator.stopAgentRequest:type_name -> lubricant.gateway.StopAgentRequest
	18, // 21: lubricant.gateway.AgentPoolOperator.updateAgentRequest:type_name -> lubricant.gateway.UpdateAgentRequest
	19, // 22: lubricant.gateway.AgentPoolOperator.getAgentStatusRequest:type_name -> lubricant.gateway.GetAgentStatusRequest
	22, // 23: lubricant.gateway.DataPoolOperator.storeDataRequest:type_name -> lubricant.agent.DataMessage
	8,  // 24: lubricant.gateway.DataPoolOperator.getDataRequest:type_name -> lubricant.gateway.DataGetRequest
	9,  // 25: lubricant.gateway.DataPoolOperator.popDataRequest:type_name -> lubricant.gateway.DataPopRequest
	10, // 26: lubricant.gateway.DataPoolOperator.topDataRequest:type_name -> lubricant.gateway.DataTopRequest
	11, // 27: lubricant.gateway.DataPoolOperator.cleanDataRequest:type_name -> lubricant.gateway.DataCleanRequest
	12, // 28: lubricant.gateway.DataPoolOperator.sizeDataRequest:type_name -> lubricant.gateway.DataSizeRequest
	0,  // 29: lubricant.gateway.debugService.mockCoreTask:input_type -> lubricant.gateway.mockCoreTaskRequest
	2,  // 30: lubricant.gateway.debugService.GatewayResources:input_type -> lubricant.gateway.GetGatewayResourcesApiRequest
	1,  // 31: lubricant.gateway.debugService.mockCoreTask:output_type -> lubricant.gateway.mockCoreTaskResponse
	3,  // 32: lubricant.gateway.debugService.GatewayResources:output_type -> lubricant.gateway.GetGatewayResourcesApiResponse
	31, // [31:33] is the sub-list for method output_type
	29, // [29:31] is the sub-list for method input_type
	29, // [29:29] is the sub-list for extension type_name
	29, // [29:29] is the sub-list for extension extendee
	0,  // [0:29] is the sub-list for field type_name
}

func init() { file_protobuf_gateway_debug_service_proto_init() }
func file_protobuf_gateway_debug_service_proto_init() {
	if File_protobuf_gateway_debug_service_proto != nil {
		return
	}
	file_protobuf_gateway_api_agent_proto_init()
	file_protobuf_gateway_debug_service_proto_msgTypes[0].OneofWrappers = []any{
		(*MockCoreTaskRequest_StartAgentRequest)(nil),
		(*MockCoreTaskRequest_CreateAgentRequest)(nil),
		(*MockCoreTaskRequest_EditAgentRequest)(nil),
		(*MockCoreTaskRequest_RemoveAgentRequest)(nil),
		(*MockCoreTaskRequest_StopAgentRequest)(nil),
		(*MockCoreTaskRequest_UpdateAgentRequest)(nil),
		(*MockCoreTaskRequest_GetAgentStatusRequest)(nil),
	}
	file_protobuf_gateway_debug_service_proto_msgTypes[1].OneofWrappers = []any{
		(*MockCoreTaskResponse_Finish)(nil),
		(*MockCoreTaskResponse_Failed)(nil),
		(*MockCoreTaskResponse_Working)(nil),
		(*MockCoreTaskResponse_Pending)(nil),
		(*MockCoreTaskResponse_NotFound)(nil),
	}
	file_protobuf_gateway_debug_service_proto_msgTypes[2].OneofWrappers = []any{
		(*GetGatewayResourcesApiRequest_Pool)(nil),
		(*GetGatewayResourcesApiRequest_AgentOperator)(nil),
		(*GetGatewayResourcesApiRequest_DataOperator)(nil),
	}
	file_protobuf_gateway_debug_service_proto_msgTypes[6].OneofWrappers = []any{
		(*AgentPoolOperator_StartAgentRequest)(nil),
		(*AgentPoolOperator_CreateAgentRequest)(nil),
		(*AgentPoolOperator_EditAgentRequest)(nil),
		(*AgentPoolOperator_RemoveAgentRequest)(nil),
		(*AgentPoolOperator_StopAgentRequest)(nil),
		(*AgentPoolOperator_UpdateAgentRequest)(nil),
		(*AgentPoolOperator_GetAgentStatusRequest)(nil),
	}
	file_protobuf_gateway_debug_service_proto_msgTypes[7].OneofWrappers = []any{
		(*DataPoolOperator_StoreDataRequest)(nil),
		(*DataPoolOperator_GetDataRequest)(nil),
		(*DataPoolOperator_PopDataRequest)(nil),
		(*DataPoolOperator_TopDataRequest)(nil),
		(*DataPoolOperator_CleanDataRequest)(nil),
		(*DataPoolOperator_SizeDataRequest)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_protobuf_gateway_debug_service_proto_rawDesc), len(file_protobuf_gateway_debug_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protobuf_gateway_debug_service_proto_goTypes,
		DependencyIndexes: file_protobuf_gateway_debug_service_proto_depIdxs,
		MessageInfos:      file_protobuf_gateway_debug_service_proto_msgTypes,
	}.Build()
	File_protobuf_gateway_debug_service_proto = out.File
	file_protobuf_gateway_debug_service_proto_goTypes = nil
	file_protobuf_gateway_debug_service_proto_depIdxs = nil
}
