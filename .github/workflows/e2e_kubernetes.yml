name: Kubernetes CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install Kind and Kubernetes
        run: |
          set -e
          curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.24.0/kind-linux-amd64
          chmod +x ./kind
          sudo mv ./kind /usr/bin/kind
          kind create cluster --config=scripts/kind.yaml

      - name: Verify Kubernetes cluster
        run: |
          kubectl cluster-info
          kubectl version
          kubectl create serviceaccount default -n default

      - name: Prepare Kubernetes Environment
        run: |
          set -e
          bash deployment/infra/nsinit.sh
          kubectl apply -f deployment/infra/db/nats.yaml
          kubectl run nginx --image=nginx:1.27
          bash deployment/infra/db/redis.sh
          bash deployment/infra/db/deploy-mysql.sh
          bash deployment/infra/auth/casdoor.sh

      - name: Build And Load Containers To Kubernetes
        run: |
          set -e
          make load-to-kind

      - name: Prepare Lubricant Resources
        run: |
          set -e
          bash scripts/push_files_to_nginx_pod.sh
          kubectl exec nginx -- bash -c 'cd /root/k8s && bash ./casdoor_init.sh'
          mkdir -p /etc/casdoor
          echo $(kubectl exec nginx -- cat /root/k8s/crt.pem) > /etc/casdoor/public.pem

      - name: Deploy Lubricant
        run: |
          set -e 
          bash deployment/infra/secret.sh
          kubectl apply -f deployment/infra/lubricant-core.yaml

      - name: Wait for Lubricant-Core to be ready
        run: |
          set -e 
          lubricant_pod=$(kubectl get pods -n lubricant | awk '/lubricant-core/ {print $1}')
          bash scripts/function/wait_pod.sh $lubricant_pod lubricant
          apt-get update && apt-get install -y jq
          kubectl exec nginx -- bash /root/k8s/core-test.sh
