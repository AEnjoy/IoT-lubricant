name: Build Release Branch

on:
  workflow_dispatch:
    inputs:
      fast_build:
        description: 'Choose whether to enable quick build'
        type: boolean
        required: true
        default: true

jobs:
  check-branch:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Validate branch name
        id: validate-branch
        run: |
          if [[ ! $GITHUB_REF_NAME =~ ^release_v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "::error::Branch name '$GITHUB_REF_NAME' does not match release_vx.x.x format"
            echo "valid=false" >> $GITHUB_OUTPUT
            exit 1
          else
            echo "valid=true" >> $GITHUB_OUTPUT
          fi


  generate-changelog:
    runs-on: ubuntu-latest
    needs: check-branch
    if: needs.check-branch.outputs.valid == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get latest tag
        id: get-tag
        run: |
          TAG=$(git describe --tags --abbrev=0)
          echo "Current tag: $TAG"
          echo "tag=$TAG" >> $GITHUB_OUTPUT    

      - name: Generate changelog
        run: |
          mkdir -p CHANGELOGS
          PREV_TAG=$(git describe --tags --abbrev=0 ${{ steps.get-tag.outputs.tag }}^ 2>/dev/null || true)
          
          if [ -z "$PREV_TAG" ]; then
            echo "Generating initial changelog"
            git log --pretty=format:"- %s" > "CHANGELOGS/${{ steps.get-tag.outputs.tag }}.md"
          else
            echo "Comparing $PREV_TAG..${{ steps.get-tag.outputs.tag }}"
            git log --pretty=format:"- %s" $PREV_TAG..${{ steps.get-tag.outputs.tag }} > "CHANGELOGS/${{ steps.get-tag.outputs.tag }}.md"
          fi

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
            title: "Update changelog for ${{ steps.get-tag.outputs.tag }}"
            body: "This PR updates the changelog for the new release."
            base: main
            head: ${{ github.head_ref }}
            commit-message: "Update changelog for ${{ steps.get-tag.outputs.tag }}"
            branch: update-changelog-${{ steps.get-tag.outputs.tag }}
            paths: |
                CHANGELOGS/${{ steps.get-tag.outputs.tag }}.md
            delete-branch: true
            labels: changelog

  build:
    runs-on: ubuntu-latest
    needs: generate-changelog
    if: needs.check-branch.outputs.valid == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go(FastBuild)
        if : ${{ inputs.fast_build }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go }}

      - name: Build docker image(FastBuild)
        if : ${{ inputs.fast_build }}
        run: |
          set -e
          make install-driver
          make build-all
          make copy-files
          FAST_BUILD=1 make docker-build -j2

      - name: Build docker image(Not FastBuild)
        if : ${{ !inputs.fast_build }}
        run: |
          set -e
          make docker-build -j2
      - name: Push docker image
        run: |
          set -e
          make push-image -j
